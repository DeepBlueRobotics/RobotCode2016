package org.usfirst.frc199.Robot2016.commands;

import edu.wpi.first.wpilibj.command.CommandGroup;

/**
 * Determines starting location and defense to cross from SmartDashboard.
 */
public class AutoMode extends CommandGroup {

	/**
	 * 
	 * @param defense
	 *            the defense which we are trying to pass 1 - low bar 2 -
	 *            portcullis (A) 3 - cheval de frise (A) 4 - Moat (B) 5 -
	 *            Ramparts (B) 6 - Drawbridge (C) 7 - Sally Port (C) 8 - Rock
	 *            Wall (D) 9 - Rough Terrain (D)
	 * @param position
	 *            can be 1, 2, 3, 4, 5
	 * 
	 */
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=PARAMETERS
	public AutoMode(int defense, int position) {

		// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=PARAMETERS
		// Add Commands here:
		// e.g. addSequential(new Command1());
		// addSequential(new Command2());
		// these will run in order.

		addSequential(new AutoDrive(10));

		switch (defense) {
		case 2:
			break;
		case 3:
			break;
		case 4:
			break;
		case 5:
			break;
		case 6:
			break;
		case 7:
			break;
		case 8:
			break;
		case 9:
			break;
		default:
			break;
		}

		switch (position) {
		case 2:
			break;
		case 3:
			break;
		case 4:
			break;
		case 5:
			break;
		default:
			break;
		}

		// To run multiple commands at the same time,
		// use addParallel()
		// e.g. addParallel(new Command1());
		// addSequential(new Command2());
		// Command1 and Command2 will run in parallel.

		// A command group will require all of the subsystems that each member
		// would require.
		// e.g. if Command1 requires chassis, and Command2 requires arm,
		// a CommandGroup containing them would require both the chassis and the
		// arm.
		// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=COMMAND_DECLARATIONS

		// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=COMMAND_DECLARATIONS

	}
}
